//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Daimajia.Swipe.Implments {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']"
	[global::Android.Runtime.Register ("com/daimajia/swipe/implments/SwipeItemAdapterMangerImpl", DoNotGenerateAcw=true)]
	public partial class SwipeItemAdapterMangerImpl : global::Com.Daimajia.Swipe.Implments.SwipeItemMangerImpl {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']/field[@name='mAdapter']"
		[Register ("mAdapter")]
		protected global::Android.Widget.BaseAdapter MAdapter {
			get {
				const string __id = "mAdapter.Landroid/widget/BaseAdapter;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Android.Widget.BaseAdapter> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mAdapter.Landroid/widget/BaseAdapter;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/daimajia/swipe/implments/SwipeItemAdapterMangerImpl", typeof (SwipeItemAdapterMangerImpl));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SwipeItemAdapterMangerImpl (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']/constructor[@name='SwipeItemAdapterMangerImpl' and count(parameter)=1 and parameter[1][@type='android.widget.BaseAdapter']]"
		[Register (".ctor", "(Landroid/widget/BaseAdapter;)V", "")]
		public unsafe SwipeItemAdapterMangerImpl (global::Android.Widget.BaseAdapter adapter) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/widget/BaseAdapter;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((adapter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adapter).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (adapter);
			}
		}

		static Delegate cb_bindView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetBindView_Landroid_view_View_IHandler ()
		{
			if (cb_bindView_Landroid_view_View_I == null)
				cb_bindView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_BindView_Landroid_view_View_I));
			return cb_bindView_Landroid_view_View_I;
		}

		static void n_BindView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Daimajia.Swipe.Implments.SwipeItemAdapterMangerImpl> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var target = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.BindView (target, position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']/method[@name='bindView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("bindView", "(Landroid/view/View;I)V", "GetBindView_Landroid_view_View_IHandler")]
		public override unsafe void BindView (global::Android.Views.View target, int position)
		{
			const string __id = "bindView.(Landroid/view/View;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate cb_initialize_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetInitialize_Landroid_view_View_IHandler ()
		{
			if (cb_initialize_Landroid_view_View_I == null)
				cb_initialize_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_Initialize_Landroid_view_View_I));
			return cb_initialize_Landroid_view_View_I;
		}

		static void n_Initialize_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Daimajia.Swipe.Implments.SwipeItemAdapterMangerImpl> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var target = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.Initialize (target, position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']/method[@name='initialize' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("initialize", "(Landroid/view/View;I)V", "GetInitialize_Landroid_view_View_IHandler")]
		public override unsafe void Initialize (global::Android.Views.View target, int position)
		{
			const string __id = "initialize.(Landroid/view/View;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

		static Delegate cb_updateConvertView_Landroid_view_View_I;
#pragma warning disable 0169
		static Delegate GetUpdateConvertView_Landroid_view_View_IHandler ()
		{
			if (cb_updateConvertView_Landroid_view_View_I == null)
				cb_updateConvertView_Landroid_view_View_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_V (n_UpdateConvertView_Landroid_view_View_I));
			return cb_updateConvertView_Landroid_view_View_I;
		}

		static void n_UpdateConvertView_Landroid_view_View_I (IntPtr jnienv, IntPtr native__this, IntPtr native_target, int position)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Daimajia.Swipe.Implments.SwipeItemAdapterMangerImpl> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var target = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_target, JniHandleOwnership.DoNotTransfer);
			__this.UpdateConvertView (target, position);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.daimajia.swipe.implments']/class[@name='SwipeItemAdapterMangerImpl']/method[@name='updateConvertView' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='int']]"
		[Register ("updateConvertView", "(Landroid/view/View;I)V", "GetUpdateConvertView_Landroid_view_View_IHandler")]
		public override unsafe void UpdateConvertView (global::Android.Views.View target, int position)
		{
			const string __id = "updateConvertView.(Landroid/view/View;I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((target == null) ? IntPtr.Zero : ((global::Java.Lang.Object) target).Handle);
				__args [1] = new JniArgumentValue (position);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (target);
			}
		}

	}
}
